body {
    background-color: #f8f9fa; /* Light background for better contrast */
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto",
        "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans",
        "Helvetica Neue", sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
        monospace;
}

main {
    display: grid;
    place-items: center;
    height: 100vh;
    width: 100vw;
}

.boxcontainer {
    display: flex;
    justify-content: space-between;
    padding: 0 2rem;
    gap: 2rem;
    max-width: 1400px;
    margin: 0 auto;
}

.container {
    max-width: 1200px; /* Limit container width for better readability */
    margin: 0 auto; /* Center the container */
    position: relative;
    border: 1px solid black;
    height: 800px;
    width: 800px;
    overflow: hidden;
}
.propcontainer {
    position: relative;
    text-align: center;
    color: black;
}
.centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/* Ensure images are responsive */
img {
    max-width: 100px;
    height:100px;
    object-fit: scale-down;
    flex: auto;
}

.plant_list {
    position: absolute;
    right: 0;
}
/* This is what will hold a plant's description (when user hovers over a plant)*/
.Plant-describer {
    height: auto;
    width: auto;
    padding: 100px;
    border: 15px solid green;
    margin: auto;
}
.Plant-header {
    text-align: center;
}
.Plant-attribute {
    text-align: left;
}

/* Use CSS variables for consistency */
.Plant {
    border-radius: var(--border-radius-base);
    height: 300px;
    width: 300px;
    padding: var(--spacing-base);
    border: 10px solid green;
    margin: auto;
}

* {
    box-sizing: border-box;
}
html,
body {
    height: 100%;
}

body {
    color: #222;
    font-family: "Helvetica Neue", sans-serif;
    font-weight: 200;
    margin: 0 50px;
}

.react-draggable,
.cursor {
    cursor: move;
}
.no-cursor {
    cursor: auto;
}
.cursor-y {
    cursor: ns-resize;
}
.cursor-x {
    cursor: ew-resize;
}

.react-draggable strong {
    background: #ddd;
    border: 1px solid #999;
    border-radius: 3px;
    display: block;
    margin-bottom: 10px;
    padding: 3px 5px;
    text-align: center;
}

.box {
    flex: auto;
    border: 1px dashed #999;
    border-radius: 3px;
    width: 130px;
    height: 130px;
    margin: 10px;
    padding: 10px;
    float: left;
    position: relative;
    text-align: center;
}

/*
 * RemWrapper needs to take it's styles from this element,
 * and this element can't have an absolute position after it's kicked in.
 * AFAIK it's not possible to do this directly in the RemWrapper component.
 */
.rem-position-fix {
    position: static !important;
}

.borderboxup {
    height: 130px;
    width: 800px;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-left: 380px;
}

.borderboxdown {
    height: 200px;
    width: 800px;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-left: 380px;
    padding-top: 10px;
}

.borderboxleft {
    height: 800px;
    width: 200px;
    margin: auto;
    display: flex;
    align-items: center;
}

.orienttextvertical {
    width: 500px;
    height: 50px;
    transform: rotate(-90deg);
    margin: auto;
}

.orienttextverticalright {
    width: 500px;
    height: 50px;
    transform: rotate(90deg);
    margin: auto;
}

.proplistcontainer {
    flex: 1;
    background: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    max-width: 400px;
}

.filters-container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1.5rem;
}

.filters-container .form-group {
    margin-bottom: 0;
}

.filters-container .form-label {
    color: #2c5530;
    font-weight: 500;
    margin-bottom: 0.5rem;
    text-align: left;
}

.filters-container .form-select {
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 0.5rem;
    color: #333;
    background-color: white;
}

.filters-container .form-select:focus {
    border-color: #2c5530;
    box-shadow: 0 0 0 0.2rem rgba(44, 85, 48, 0.25);
}

.scroll-bar {
    max-height: 600px;
    overflow-y: auto;
    padding: 0;
    margin: 0;
    list-style: none;
}

.scroll-bar::-webkit-scrollbar {
    width: 8px;
}

.scroll-bar::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
}

.scroll-bar::-webkit-scrollbar-thumb {
    background: #2c5530;
    border-radius: 4px;
}

.scroll-bar::-webkit-scrollbar-thumb:hover {
    background: #1e3c21;
}

.propcontainer {
    display: flex;
    align-items: center;
    padding: 0.5rem;
    border-bottom: 1px solid #eee;
}

.propcontainer:last-child {
    border-bottom: none;
}

.propcontainer li {
    margin: 0;
    padding: 0.5rem;
    color: #333;
    font-size: 1rem;
}

.plants-section {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    gap: 20px;
}

.select-text {
    color: #2c5530;
    margin: 0 0 1.5rem 0;
    font-weight: 500;
    text-align: left;
    padding-left: 0.5rem;
    font-size: 1.2rem;
}

.App {
    text-align: center;
    min-height: 100vh;
    background-color: #f5f5f5;
}

.App-header {
    background-color: #2c5530;
    color: white;
    padding: 1rem;
    font-size: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.propcontainer input[type="number"] {
    border: 1px solid #ddd;
    border-radius: 4px;
    padding: 4px 8px;
    font-size: 0.9rem;
    color: #333;
    background-color: white;
}

.propcontainer input[type="number"]:focus {
    outline: none;
    border-color: #2c5530;
    box-shadow: 0 0 0 2px rgba(44, 85, 48, 0.1);
}

.propcontainer input[type="number"]::-webkit-inner-spin-button,
.propcontainer input[type="number"]::-webkit-outer-spin-button {
    opacity: 1;
    height: 24px;
}















